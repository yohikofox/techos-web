name: CI Internal Website Prod
on: [workflow_dispatch]

jobs:
  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: docker/metadata-action@v3
        id: metadata
        with:
          images: ${{secrets.REGISTRY_SERVER}}/techos
          tags: |
            type=sha,prefix={{branch}}-
            type=semver,enable=true,pattern={{version}}
          flavor: |
            latest=false
      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            NEXT_TELEMETRY_DISABLED=1
            CMS_ENDPOINT: ${{ secrets.CMS_ENDPOINT }}
            CMS_API_KEY: ${{ secrets.BACKEND_TOKEN }}
            NEXT_PUBLIC_FRONT_URL: ${{ secrets.FRONTEND_ENDPOINT }}
            JWT_KEY: ${{ secrets.JWT_SECRET }}
          file: Dockerfile
          context: "{{defaultContext}}:."
          tags: ${{ steps.metadata.outputs.tags }}
  deploy:
    environment: production
    runs-on: ubuntu-latest
    needs: ["build-and-publish-docker-image"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: rg.fr-par.scw.cloud/thetribe/techos
          tags: |
            type=sha,prefix={{branch}}-
            type=semver,enable=true,pattern={{version}}
          flavor: |
            latest=false
      - name: deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        with:
          args: |
            helm upgrade -i frontend "./deploy/techos" --set image.tag=${{ steps.metadata.outputs.version }} --create-namespace --namespace=${{secrets.NAMESPACE}}
